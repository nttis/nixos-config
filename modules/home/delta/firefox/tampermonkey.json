{
  "#begging": {
    "origin": "normal",
    "value": {
      "dialog": {
        "ts": 174766951413199
      },
      "first_run": {
        "ts": 0,
        "type": "from_init"
      },
      "hide": {
        "ts": 174766951809099
      }
    }
  },
  "#config": {
    "origin": "normal",
    "value": {
      "configMode": 100,
      "statistics_enabled": false
    }
  },
  "#laststart": {
    "origin": "normal",
    "value": 1747672089687
  },
  "#misc_configglobal_hints.items": {
    "origin": "normal",
    "value": {
      "android_hint": 174767160962299,
      "stats": 1747672173141
    }
  },
  "#schema": {
    "origin": "normal",
    "value": "5465"
  },
  "#update": {
    "origin": "normal",
    "value": {
      "black": {
        "last": 1747669565319,
        "version": 0
      },
      "scripts": 0
    }
  },
  "@meta#d31cbfb6-6013-4315-92be-a8d23fca8a5f": {
    "origin": "normal",
    "value": {
      "name": "Freedom",
      "description": "Regain freedom",
      "version": "1.0.0",
      "grant": [
        "none"
      ],
      "icon": null,
      "icon64": null,
      "supportURL": null,
      "fileURL": null,
      "downloadURL": null,
      "updateURL": null,
      "namespace": "http://tampermonkey.net/",
      "requires": [],
      "includes": [],
      "matches": [
        "*://*/*"
      ],
      "excludes": [],
      "homepage": null,
      "resources": [],
      "connects": [],
      "webRequest": null,
      "author": null,
      "copyright": null,
      "antifeatures": {},
      "name_i18n": {},
      "description_i18n": {},
      "uuid": "d31cbfb6-6013-4315-92be-a8d23fca8a5f",
      "enabled": true,
      "position": 1,
      "blockers": [],
      "lastModified": 1747672190731,
      "sync": {
        "imported": 9
      },
      "options": {
        "check_for_updates": true,
        "user_modified": null,
        "comment": null,
        "compatopts_for_requires": true,
        "compat_wrappedjsobject": false,
        "compat_metadata": false,
        "compat_foreach": false,
        "compat_powerful_this": null,
        "sandbox": null,
        "noframes": null,
        "unwrap": null,
        "run_at": "document-start",
        "run_in": null,
        "tags": [],
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [],
          "orig_matches": [
            "*://*/*"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-start",
          "orig_run_in": [],
          "orig_tags": [],
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        }
      },
      "header": "// ==UserScript==\n// @name         Freedom\n// @namespace    http://tampermonkey.net/\n// @version      1.0.0\n// @description  Regain freedom\n// @match        *://*/*\n// @grant        none\n// @run-at       document-start\n// ==/UserScript==",
      "evilness": 0
    }
  },
  "@re#d31cbfb6-6013-4315-92be-a8d23fca8a5f": {
    "origin": "normal",
    "value": {
      "inc": [],
      "match": [
        "*://*/*"
      ],
      "exc": []
    }
  },
  "@source#d31cbfb6-6013-4315-92be-a8d23fca8a5f": {
    "origin": "normal",
    "value": "// ==UserScript==\n// @name         Freedom\n// @namespace    http://tampermonkey.net/\n// @version      1.0.0\n// @description  Regain freedom\n// @match        *://*/*\n// @grant        none\n// @run-at       document-start\n// ==/UserScript==\n\n(function() {\n  \"use strict\";\n\n  document.addEventListener(\n    \"keydown\",\n    (event) => {\n      if (\n        (event.ctrlKey || event.metaKey) &&\n        [\"c\", \"x\", \"v\"].includes(event.key)\n      ) {\n        event.stopImmediatePropagation();\n      }\n    },\n    true\n  );\n\n  document.addEventListener(\n    \"paste\",\n    function(e) {\n      e.stopImmediatePropagation();\n    },\n    true\n  );\n\n  document.addEventListener(\n    \"cut\",\n    function(e) {\n      e.stopImmediatePropagation();\n    },\n    true\n  );\n\n  document.addEventListener(\n    \"copy\",\n    function(e) {\n      e.stopImmediatePropagation();\n    },\n    true\n  );\n\n  // Store original functions\n  const originalSetInterval = window.setInterval;\n  const originalAddEventListener = window.addEventListener;\n  const originalConsole = window.console;\n\n  // Override setInterval to block detection intervals\n  window.setInterval = function(callback, delay) {\n    // If the callback is a function and delay is a typical detection value, neutralize it\n    if (typeof callback === 'function' && typeof delay === 'number' && delay <= 2000) {\n      console.log(`Blocked setInterval with delay ${delay}ms`);\n      return originalSetInterval(function() { }, delay); // Return a no-op interval\n    }\n    return originalSetInterval.apply(this, arguments);\n  };\n\n  // Override addEventListener to block resize listeners\n  window.addEventListener = function(type, listener, options) {\n    if (type === 'resize') {\n      console.log('Blocked resize event listener');\n      return; // Do nothing\n    }\n    return originalAddEventListener.apply(this, arguments);\n  };\n\n  // Neutralize console methods to prevent timing-based detection\n  window.console = {\n    log: function() { },\n    table: function() { },\n    warn: function() { },\n    clear: function() { },\n    ...originalConsole\n  };\n\n  // Prevent RegExp toString traps\n  const originalRegExpToString = RegExp.prototype.toString;\n  RegExp.prototype.toString = function() {\n    try {\n      return originalRegExpToString.call(this);\n    } catch (e) {\n      return '';\n    }\n  };\n\n  // Prevent DOM element getter traps (e.g., DefineId)\n  const originalDefineProperty = Object.defineProperty;\n  Object.defineProperty = function(obj, prop, descriptor) {\n    if (prop === 'id' && obj instanceof HTMLElement && descriptor.get) {\n      console.log('Blocked suspicious id getter on element');\n      return originalDefineProperty(obj, prop, { value: 'bypassed-id' });\n    }\n    return originalDefineProperty.apply(this, arguments);\n  };\n\n  // Remove disable-devtool-auto attribute as early as possible\n  document.addEventListener('DOMContentLoaded', function() {\n    const elements = document.querySelectorAll('[disable-devtool-auto]');\n    elements.forEach(el => {\n      el.removeAttribute('disable-devtool-auto');\n      console.log('Removed disable-devtool-auto attribute');\n    });\n  });\n\n  Object.defineProperty(window.location, 'href', {\n    set: function(value) {\n      console.log(`Blocked location.href redirect to ${value}`);\n      // Do nothing\n    }\n  });\n\n  console.log('Devtool detection bypass initialized');\n})();\n\n"
  },
  "@st#d31cbfb6-6013-4315-92be-a8d23fca8a5f": {
    "origin": "normal",
    "value": {
      "data": {},
      "ts": 0
    }
  },
  "@uid#d31cbfb6-6013-4315-92be-a8d23fca8a5f": {
    "origin": "normal",
    "value": "Freedom"
  }
}
