name: "Build and push flake to cache"

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  define-matrix:
    name: "Generate build matrix from flake attributes"
    runs-on: "ubuntu-latest"

    outputs:
      matrix: ${{ steps.define-matrix.outputs.matrix }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Install Nix"
        uses: "cachix/install-nix-action@f0fe604f8a612776892427721526b4c7cfb23aba" # v31.4.1
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: "https://releases.nixos.org/nix/nix-2.28.4/install"

      - name: "Generate matrix"
        id: "define-matrix"
        run: |
          set -Eeu
          matrix="$(nix eval --inputs-from . --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: "define-matrix"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}

    steps:
      - name: "Purge"
        run: |
          sudo rm -rf /opt/hostedtoolcache \
                      /usr/local/lib/android \
                      /usr/local/.ghcup \
                      /usr/share/dotnet

      - name: "Install Nix"
        uses: "cachix/install-nix-action@f0fe604f8a612776892427721526b4c7cfb23aba" # v31.4.1
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: "https://releases.nixos.org/nix/nix-2.28.4/install"

      - name: "Install Cachix"
        uses: "cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad" # v16
        with:
          name: "nttis"
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Commence the build"
        run: |
          nix build --inputs-from . --print-build-logs .#'${{ matrix.attr }}'
